openapi: 3.0.0
info:
  title: IAK API Docs
  version: '1.0'
  contact:
    email: techsupport@mobilepulsa.com
    name: Tect Support
  description: Api For Prepaid and Postpaid Desc Here
servers:
  - url: 'https://testprepaid.mobilepulsa.net'
    description: Postpaid Sandbox
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags:
        - test user
        - v1
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the infromation of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      tags:
        - test user
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      tags:
        - test user
        - v1
  '/v1/legacy/index/{type}/{operator}':
    post:
      summary: ''
      operationId: post-v1-legacy-index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: false
                    items:
                      type: object
                      properties:
                        pulsa_code:
                          type: string
                          minLength: 1
                        pulsa_op:
                          type: string
                          minLength: 1
                        pulsa_nominal:
                          type: string
                          minLength: 1
                        pulsa_price:
                          type: number
                        pulsa_type:
                          type: string
                          minLength: 1
                        masaaktif:
                          type: string
                          minLength: 1
                        status:
                          type: string
                      required:
                        - pulsa_code
                        - pulsa_op
                        - pulsa_nominal
                        - pulsa_price
                        - pulsa_type
                        - masaaktif
                        - status
                required:
                  - data
              examples:
                Response Pricelist Json:
                  value:
                    data:
                      - pulsa_code: alfamart100
                        pulsa_op: Alfamart Voucher
                        pulsa_nominal: Voucher Alfamart Rp 100.000
                        pulsa_price: 100000
                        pulsa_type: voucher
                        masaaktif: '0'
                        status: active
                      - pulsa_code: altel10
                        pulsa_op: Malaysia Topup
                        pulsa_nominal: '10'
                        pulsa_price: 39750
                        pulsa_type: malaysia
                        masaaktif: '0'
                        status: active
                      - pulsa_code: altel100
                        pulsa_op: Malaysia Topup
                        pulsa_nominal: '100'
                        pulsa_price: 397500
                        pulsa_type: malaysia
                        masaaktif: '0'
                        status: active
          headers: {}
        '201':
          $ref: '#/components/responses/Test'
      description: API to get prepaid pricelist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commands:
                  type: string
                username:
                  type: string
                sign:
                  type: string
                  description: md5(user_hp+api_key+'pl')
                status:
                  type: string
                  default: all
              required:
                - commands
                - username
                - sign
                - status
            examples:
              Request Body Pricelist Json:
                value:
                  commands: pricelist
                  username: '089682779598'
                  sign: 4e7390d69fce6f04a6d1c4c7c3f29fb3
                  status: all
        description: Request body for Pricelist Prepaid
      tags:
        - prepaid-v1
        - pricelist
      parameters: []
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
      - schema:
          type: string
        name: operator
        in: path
        required: true
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Test:
      title: Test
      type: object
      properties:
        id:
          type: string
  responses:
    Test:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
  parameters:
    Test:
      name: Test
      in: path
      required: true
      schema:
        type: string
tags:
  - name: test user
  - name: prepaid-v1
  - name: pricelist
  - name: v1
